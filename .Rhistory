segment.ncp = 3,
segment.angle = 20,
show.legend=FALSE
)
p1 + p2
p2 <- ggplot(soothing_plot2_data, aes(x = factor(phase), y = mean, color = condition, group = condition)) +
geom_line(show.legend = FALSE) +
geom_point(size=1, show.legend = FALSE)+
theme_classic() +
ylim(0,1)+
scale_color_manual(values=themecolors,
labels = c("Manipulation", "Control"))+
labs(x = NULL, y = NULL, color = "Condition") +
guides(color = guide_legend(override.aes = list(size=4))) +
theme(legend.position="bottom", legend.box = "horizontal", legend.title = element_blank())+
ggtitle('Proportion of singing as a soothing method \nacross conditions')+
theme(plot.title = element_text(size = 8, face="bold"),
legend.text=element_text(size=7),
axis.text.x = element_text(vjust = 0.1))+
geom_errorbar(data = soothing_plot2_data,
aes(x = phase,
y=mean,
ymin=mean-se,
ymax=mean+se),
width = .1,
group = condition,
show.legend = F) +
expand_limits(x = c(1, 3.9))+
geom_text_repel(
aes(label = condition_label),
data=data_ends2,
size = 2.5,
direction = "y",
vjust = 2,
segment.size = .7,
xlim = c(3, NA),
segment.alpha = 0,
segment.linetype = "dotted",
box.padding = .5,
point.padding = .1,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
show.legend=FALSE
)
p1 + p2
p2 <- ggplot(soothing_plot2_data, aes(x = factor(phase), y = mean, color = condition, group = condition)) +
geom_line(show.legend = FALSE) +
geom_point(size=1, show.legend = FALSE)+
theme_classic() +
ylim(0,1)+
scale_color_manual(values=themecolors,
labels = c("Manipulation", "Control"))+
labs(x = NULL, y = NULL, color = "Condition") +
guides(color = guide_legend(override.aes = list(size=4))) +
theme(legend.position="bottom", legend.box = "horizontal", legend.title = element_blank())+
ggtitle('Proportion of singing as a soothing method \nacross conditions')+
theme(plot.title = element_text(size = 8, face="bold"),
legend.text=element_text(size=7),
axis.text.x = element_text(vjust = 0.1))+
geom_errorbar(data = soothing_plot2_data,
aes(x = phase,
y=mean,
ymin=mean-se,
ymax=mean+se),
width = .1,
group = condition,
show.legend = F) +
expand_limits(x = c(1, 3.9))+
geom_text_repel(
aes(label = condition_label),
data=data_ends2,
size = 2.5,
direction = "y",
vjust = 3,
segment.size = .7,
xlim = c(3, NA),
segment.alpha = 0,
segment.linetype = "dotted",
box.padding = .5,
point.padding = .1,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
show.legend=FALSE
)
p1 + p2
ggsave(here("./viz", "figure3.png"), width = 8, height = 4.5)
p1 <- ggplot(baby_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
width = 0.1,
position = position_dodge(width = .3),
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
xlab("") +
ylab(expression('Infant Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 2, y = 1.3, label = "**", alpha = 1, size = 4) +
annotate("text", x = 1, y = 1.4, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group", override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 15),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_bracket(xmin = 1, xmax = 2,
y.position = 1.7,
label = "***")
p2 <- ggplot(parent_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
position = position_dodge(width = .3),
width = 0.1,
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
scale_color_manual(values = themecolors, labels = c("Manipulation", "Control")) +  # Match color scale to fill scale
theme_classic()+
xlab("") +
ylab(expression('Caregiver Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 1, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
annotate("text", x = 2, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group",
override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 15),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
combined + plot_layout(guides = "collect")
ggsave(here("./viz", "figure4.png"), width = 8, height = 4.5)
p1 <- ggplot(baby_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
width = 0.1,
position = position_dodge(width = .3),
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
xlab("") +
ylab(expression('Infant Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 2, y = 1.3, label = "**", alpha = 1, size = 4) +
annotate("text", x = 1, y = 1.4, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group", override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 15),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_bracket(xmin = 1, xmax = 2,
y.position = 1.7,
label = "***")
p2 <- ggplot(parent_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
position = position_dodge(width = .3),
width = 0.1,
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
scale_color_manual(values = themecolors, labels = c("Manipulation", "Control")) +  # Match color scale to fill scale
theme_classic()+
xlab("") +
ylab(expression('Caregiver Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 1, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
annotate("text", x = 2, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group",
override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 15),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
combined <- p1 + p2 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect")
ggsave(here("./viz", "figure4.png"), width = 8, height = 4.5)
p2 <- ggplot(parent_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
position = position_dodge(width = .3),
width = 0.1,
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
scale_color_manual(values = themecolors, labels = c("Manipulation", "Control")) +  # Match color scale to fill scale
theme_classic()+
xlab("") +
ylab(expression('Caregiver Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 1, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
annotate("text", x = 2, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group",
override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 15),
axis.text = element_text(size = 10),
axis.title = element_text(size = 15),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
combined <- p1 + p2 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect")
ggsave(here("./viz", "figure4.png"), width = 8, height = 4.5)
p1 <- ggplot(baby_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
width = 0.1,
position = position_dodge(width = .3),
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
xlab("") +
ylab(expression('Infant Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 2, y = 1.3, label = "**", alpha = 1, size = 4) +
annotate("text", x = 1, y = 1.4, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group", override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_bracket(xmin = 1, xmax = 2,
y.position = 1.7,
label = "***")
p2 <- ggplot(parent_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
position = position_dodge(width = .3),
width = 0.1,
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
scale_color_manual(values = themecolors, labels = c("Manipulation", "Control")) +  # Match color scale to fill scale
theme_classic()+
xlab("") +
ylab(expression('Caregiver Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 1, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
annotate("text", x = 2, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group",
override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 15),
axis.text = element_text(size = 10),
axis.title = element_text(size = 15),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
combined <- p1 + p2 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect")
ggsave(here("./viz", "figure4.png"), width = 8, height = 4.5)
p1 <- ggplot(baby_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
width = 0.1,
position = position_dodge(width = .3),
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
xlab("") +
ylab(expression('Infant Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 2, y = 1.3, label = "**", alpha = 1, size = 4) +
annotate("text", x = 1, y = 1.4, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group", override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_bracket(xmin = 1, xmax = 2,
y.position = 1.7,
label = "***")
p2 <- ggplot(parent_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
position = position_dodge(width = .3),
width = 0.1,
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
scale_color_manual(values = themecolors, labels = c("Manipulation", "Control")) +  # Match color scale to fill scale
theme_classic()+
xlab("") +
ylab(expression('Caregiver Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 1, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
annotate("text", x = 2, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group",
override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 15),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
combined <- p1 + p2 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect")
ggsave(here("./viz", "figure4.png"), width = 8, height = 4.5)
p1 <- ggplot(baby_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
width = 0.1,
position = position_dodge(width = .3),
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
xlab("") +
ylab(expression('Infant Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 2, y = 1.3, label = "**", alpha = 1, size = 4) +
annotate("text", x = 1, y = 1.4, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group", override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_bracket(xmin = 1, xmax = 2,
y.position = 1.7,
label = "***")
p2 <- ggplot(parent_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
position = position_dodge(width = .3),
width = 0.1,
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
scale_color_manual(values = themecolors, labels = c("Manipulation", "Control")) +  # Match color scale to fill scale
theme_classic()+
xlab("") +
ylab(expression('Caregiver Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 1, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
annotate("text", x = 2, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group",
override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 15),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
combined <- p1 + p2 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect")
ggsave(here("./viz", "figure4.png"), width = 8, height = 4.5)
