ymax=mean+se),
width = .1,
group = condition,
show.legend = F) +
expand_limits(x = c(1, 3.9))+
geom_text_repel(
aes(label = condition_label),
data=data_ends2,
size = 2.5,
direction = "y",
vjust = 3,
segment.size = .7,
xlim = c(3, NA),
segment.alpha = 0,
segment.linetype = "dotted",
box.padding = .5,
point.padding = .1,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20,
show.legend=FALSE
)
p1 + p2
ggsave(here("./viz", "figure3.png"), width = 8, height = 4.5)
p1 <- ggplot(baby_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
width = 0.1,
position = position_dodge(width = .3),
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
xlab("") +
ylab(expression('Infant Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 2, y = 1.3, label = "**", alpha = 1, size = 4) +
annotate("text", x = 1, y = 1.4, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group", override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 15),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_bracket(xmin = 1, xmax = 2,
y.position = 1.7,
label = "***")
p2 <- ggplot(parent_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
position = position_dodge(width = .3),
width = 0.1,
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
scale_color_manual(values = themecolors, labels = c("Manipulation", "Control")) +  # Match color scale to fill scale
theme_classic()+
xlab("") +
ylab(expression('Caregiver Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 1, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
annotate("text", x = 2, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group",
override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 15),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
combined + plot_layout(guides = "collect")
ggsave(here("./viz", "figure4.png"), width = 8, height = 4.5)
p1 <- ggplot(baby_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
width = 0.1,
position = position_dodge(width = .3),
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
xlab("") +
ylab(expression('Infant Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 2, y = 1.3, label = "**", alpha = 1, size = 4) +
annotate("text", x = 1, y = 1.4, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group", override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 15),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_bracket(xmin = 1, xmax = 2,
y.position = 1.7,
label = "***")
p2 <- ggplot(parent_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
position = position_dodge(width = .3),
width = 0.1,
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
scale_color_manual(values = themecolors, labels = c("Manipulation", "Control")) +  # Match color scale to fill scale
theme_classic()+
xlab("") +
ylab(expression('Caregiver Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 1, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
annotate("text", x = 2, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group",
override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 15),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
combined <- p1 + p2 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect")
ggsave(here("./viz", "figure4.png"), width = 8, height = 4.5)
p2 <- ggplot(parent_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
position = position_dodge(width = .3),
width = 0.1,
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
scale_color_manual(values = themecolors, labels = c("Manipulation", "Control")) +  # Match color scale to fill scale
theme_classic()+
xlab("") +
ylab(expression('Caregiver Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 1, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
annotate("text", x = 2, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group",
override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 15),
axis.text = element_text(size = 10),
axis.title = element_text(size = 15),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
combined <- p1 + p2 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect")
ggsave(here("./viz", "figure4.png"), width = 8, height = 4.5)
p1 <- ggplot(baby_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
width = 0.1,
position = position_dodge(width = .3),
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
xlab("") +
ylab(expression('Infant Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 2, y = 1.3, label = "**", alpha = 1, size = 4) +
annotate("text", x = 1, y = 1.4, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group", override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_bracket(xmin = 1, xmax = 2,
y.position = 1.7,
label = "***")
p2 <- ggplot(parent_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
position = position_dodge(width = .3),
width = 0.1,
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
scale_color_manual(values = themecolors, labels = c("Manipulation", "Control")) +  # Match color scale to fill scale
theme_classic()+
xlab("") +
ylab(expression('Caregiver Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 1, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
annotate("text", x = 2, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group",
override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 15),
axis.text = element_text(size = 10),
axis.title = element_text(size = 15),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
combined <- p1 + p2 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect")
ggsave(here("./viz", "figure4.png"), width = 8, height = 4.5)
p1 <- ggplot(baby_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
width = 0.1,
position = position_dodge(width = .3),
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
xlab("") +
ylab(expression('Infant Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 2, y = 1.3, label = "**", alpha = 1, size = 4) +
annotate("text", x = 1, y = 1.4, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group", override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_bracket(xmin = 1, xmax = 2,
y.position = 1.7,
label = "***")
p2 <- ggplot(parent_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
position = position_dodge(width = .3),
width = 0.1,
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
scale_color_manual(values = themecolors, labels = c("Manipulation", "Control")) +  # Match color scale to fill scale
theme_classic()+
xlab("") +
ylab(expression('Caregiver Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 1, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
annotate("text", x = 2, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group",
override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 15),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 15),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
combined <- p1 + p2 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect")
ggsave(here("./viz", "figure4.png"), width = 8, height = 4.5)
p1 <- ggplot(baby_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
width = 0.1,
position = position_dodge(width = .3),
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
xlab("") +
ylab(expression('Infant Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 2, y = 1.3, label = "**", alpha = 1, size = 4) +
annotate("text", x = 1, y = 1.4, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group", override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 20),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
geom_bracket(xmin = 1, xmax = 2,
y.position = 1.7,
label = "***")
p2 <- ggplot(parent_mood_dat_plot, aes(x = week, y = weeklyPos_scaled, fill = condition)) +
scale_fill_manual(values = themecolors, labels = c("Manipulation", "Control")) +
geom_split_violin(nudge = 0.02,
key_glyph = draw_key_point,
width = .5,
trim = FALSE) +
geom_boxplot(aes(fill = interaction(condition, week), group = interaction(condition, week)),
position = position_dodge(width = .3),
width = 0.1,
show.legend = FALSE,
outlier.shape = NA,
key_glyph = draw_key_point,
notch = TRUE,
fill = "white",
color = "black") +  # Set outline color to black
theme_classic() +
scale_color_manual(values = themecolors, labels = c("Manipulation", "Control")) +  # Match color scale to fill scale
theme_classic()+
xlab("") +
ylab(expression('Caregiver Mood ('~italic("z")~')'))+
ylim(-2, 2) +
annotate("text", x = 1, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
annotate("text", x = 2, y = 1.6, label = "n.s.", alpha = 1, size = 4) +
guides(fill = guide_legend(title = "Group",
override.aes = list(shape = 19, size = 8, alpha = 1, color = themecolors))) +
theme(
legend.position = "right",
text = element_text(size = 15),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10),
legend.text = element_text(size = 10),
legend.title = element_text(size = 10),
plot.background = element_rect(fill = "transparent", colour = "transparent"),
panel.background = element_rect(fill = "transparent", colour = "transparent"),
legend.background = element_rect(fill = "transparent", colour = "transparent")
) +
geom_hline(yintercept = 0, linetype = "dashed", color = "black")
combined <- p1 + p2 & theme(legend.position = "bottom")
combined + plot_layout(guides = "collect")
ggsave(here("./viz", "figure4.png"), width = 8, height = 4.5)
weekly_freq <- dat %>%
filter(daynumber < 42) %>%
mutate(week = ceiling((daynumber+1)/ 7)) %>%
dplyr::select(condition,miph_id,daynumber,week,EMA_babySingHowManyTimes) %>%
drop_na()%>%
group_by(condition, week, miph_id) %>%
summarise(avg_singing_frequency = mean(EMA_babySingHowManyTimes)) %>%
group_by(condition, week) %>%
summarise(mean_avg_singing_frequency = mean(avg_singing_frequency),
n= n(),
sd = sd(avg_singing_frequency),
se = sd/sqrt(n)
) %>%
ungroup() %>%
mutate(week_coordinate = case_when(week == 1 ~ 6,
week == 2 ~ 13,
week == 3 ~ 20,
week == 4 ~ 27,
week == 5 ~ 34,
week == 6 ~ 41))
# note, make sure {plyr} is installed: install.packages("plyr")
library(pacman)
p_load(
here,
RColorBrewer,
tidyverse,
kableExtra,
ggplot2,
ggpubr,
ggrepel,
patchwork,
gghighlight
)
# set this variable to TRUE to run the full analysis script, otherwise the Rmd will knit with stored results from the most recent run
full_run_of_analysis_script <- TRUE
if (full_run_of_analysis_script == TRUE) {
source(here("analysis", "analysis.R"))
} else {
load(here::here("results", "analysis.RData"))
}
# functions for formatting stats in .rmd knit
# rounds to 2 or 3 decimal places
r0 <- function(num) {format(round(num, 0), nsmall = 0)}
r2 <- function(num) {format(round(num, 2), nsmall = 2)}
r3 <- function(num) {format(round(num, 3), nsmall = 3)}
# formats to percentage
p <- function(num) {paste0((100*(num)) %>% r2, "%")}
# format p-values
fp <- function(num) {
if (num < .0001) {
return("< .0001")
} else if (num < .001) {
return("< .001")
} else if (num < .01) {
return(paste0("= ", round(num, digits = 3)))
} else {
return(paste0("= ", round(num, digits = 2)))
}
}
f <- function(num) {format(num, big.mark = ",")}
themecolors = c('mediumpurple3','yellowgreen')
soothing_analyses$singing_change$control$statistic
soothing_analyses$singing_change$control$p.value %>% fp
soothing_analyses$singing_change$control$p.value
